version: '3.8'

services:
  app:
    build: .
    container_name: js-be-app
    ports:
      - "8081:8081"
#    depends_on:
#      - db
#      - redis
    environment:
      # Spring Boot profile 설정
#      SPRING_PROFILES_ACTIVE: docker

      # PostgreSQL 연결 설정
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/postgres
      SPRING_DATASOURCE_USERNAME: docker_readonly_user
      SPRING_DATASOURCE_PASSWORD: 5432

      # Redis 연결 설정
#      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_HOST: host.docker.internal
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 5s
      SPRING_DATA_REDIS_LETTUCE_POOL_MAX_ACTIVE: 10
      SPRING_DATA_REDIS_LETTUCE_POOL_MAX_IDLE: 5
      SPRING_DATA_REDIS_LETTUCE_POOL_MIN_IDLE: 1
      SPRING_DATA_REDIS_LETTUCE_POOL_MAX_WAIT: 2s

      # JWT 키 등 추가 설정
      JWT_SECRET: DgPq2mU5f0loZKIMwN+UPFbEvBn7QSUOwRPQ9GbGpoA=

#  db:
#    image: postgres:14
#    container_name: postgres-db
#    restart: always
#    environment:
#      POSTGRES_DB: postgres
#      POSTGRES_USER: docker_readonly_user
#      POSTGRES_PASSWORD: 5432
#    ports:
#      - "5432:5432"
#    volumes:
#      - pgdata:/var/lib/postgresql/data

#  redis:
#    image: redis:alpine
#    container_name: redis-server
#    restart: always
#    ports:
#      - "6379:6379"

#volumes:
#  pgdata: